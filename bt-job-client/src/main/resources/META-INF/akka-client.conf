akka{
    loglevel = "WARNING"
    loggers = ["akka.event.slf4j.Slf4jLogger"]

    jvm-shutdown-hooks = on

    actor {

        # Either one of "local", "remote" or "cluster" or the
        # FQCN of the ActorRefProvider to be used; the below is the built-in default,
        # note that "remote" and "cluster" requires the akka-remote and akka-cluster
        # artifacts to be on the classpath.
        provider = "remote"

        serialization-bindings {
            "com.github.devil.common.serialization.JobSerializable" = jackson-cbor
        }

        warn-about-java-serializer-usage = false

    }

    remote {

        warn-about-direct-use = off

        artery {

            # Disable artery with this flag
            enabled = on

            # Select the underlying transport implementation.
            #
            # Possible values: aeron-udp, tcp, tls-tcp
            # See https://doc.akka.io/docs/akka/current/remoting-artery.html#selecting-a-transport for the tradeoffs
            # for each transport
            transport = tcp

            # Canonical address is the address other clients should connect to.
            # Artery transport will expect messages to this address.
            canonical {

                # The default remote server port clients should connect to.
                # Default is 25520, use 0 if you want a random available port
                # This port needs to be unique for each actor system on the same machine.
                port = 10000

                # Hostname clients should connect to. Can be set to an ip, hostname
                # or one of the following special values:
                #   "<getHostAddress>"   InetAddress.getLocalHost.getHostAddress
                #   "<getHostName>"      InetAddress.getLocalHost.getHostName
                #
                hostname = "127.0.0.1"
            }
        }

    }
    job-client-dispatcher {
        # Must be one of the following
        # Dispatcher, PinnedDispatcher, or a FQCN to a class inheriting
        # MessageDispatcherConfigurator with a public constructor with
        # both com.typesafe.config.Config parameter and
        # akka.dispatch.DispatcherPrerequisites parameters.
        # PinnedDispatcher must be used together with executor=thread-pool-executor.
        type = Dispatcher

        # Which kind of ExecutorService to use for this dispatcher
        # Valid options:
        #  - "default-executor" requires a "default-executor" section
        #  - "fork-join-executor" requires a "fork-join-executor" section
        #  - "thread-pool-executor" requires a "thread-pool-executor" section
        #  - "affinity-pool-executor" requires an "affinity-pool-executor" section
        #  - A FQCN of a class extending ExecutorServiceConfigurator
        executor = "fork-join-executor"

        # This will be used if you have set "executor = "fork-join-executor""
        # Underlying thread pool implementation is java.util.concurrent.ForkJoinPool
        fork-join-executor {
          # Min number of threads to cap factor-based parallelism number to
          parallelism-min = 8

          # The parallelism factor is used to determine thread pool size using the
          # following formula: ceil(available processors * factor). Resulting size
          # is then bounded by the parallelism-min and parallelism-max values.
          parallelism-factor = 4.0

          # Max number of threads to cap factor-based parallelism number to
          parallelism-max = 32

          # Setting to "FIFO" to use queue like peeking mode which "poll" or "LIFO" to use stack
          # like peeking mode which "pop".
          task-peeking-mode = "FIFO"
        }
    }
}

akka.serialization.jackson {
  # Configuration of the ObjectMapper serialization features.
  # See com.fasterxml.jackson.databind.SerializationFeature
  # Enum values corresponding to the SerializationFeature and their boolean value.
  serialization-features {
    # Date/time in ISO-8601 (rfc3339) yyyy-MM-dd'T'HH:mm:ss.SSSZ format
    # as defined by com.fasterxml.jackson.databind.util.StdDateFormat
    # For interoperability it's better to use the ISO format, i.e. WRITE_DATES_AS_TIMESTAMPS=off,
    # but WRITE_DATES_AS_TIMESTAMPS=on has better performance.
    WRITE_DATES_AS_TIMESTAMPS = off
    WRITE_DURATIONS_AS_TIMESTAMPS = off
    FAIL_ON_EMPTY_BEANS = off
  }

  # Configuration of the ObjectMapper deserialization features.
  # See com.fasterxml.jackson.databind.DeserializationFeature
  # Enum values corresponding to the DeserializationFeature and their boolean value.
  deserialization-features {
    FAIL_ON_UNKNOWN_PROPERTIES = off
  }
}
